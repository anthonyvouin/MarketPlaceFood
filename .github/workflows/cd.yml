name: CD

on:
  workflow_run:
    workflows: [CI]
    branches: [main]
    types: completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.head_branch == 'main' && github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Étape 2 : Configuration de la clé SSH
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H 217.160.164.228 >> ~/.ssh/known_hosts || true
          chmod 644 ~/.ssh/known_hosts

      # Étape 3 : Test de la connexion SSH
      - name: Test SSH connection
        run: |
          ssh -i ~/.ssh/id_ed25519 anthony@217.160.164.228 "echo 'Connexion SSH réussie!'"

      # Étape 4 : Configuration de Python pour installer Ansible
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'


      # Étape 5 : Installation d'Ansible
      - name: Install Ansible
        run: |
            python -m pip install --upgrade pip
            pip install ansible

      # Étape 6 : Création du fichier de mot de passe pour Vault
      - name: Create vault password file
        env:
          VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
        run: |
          echo "$VAULT_PASSWORD" > vault_pass.txt

      # Étape 7 : Exécution du playbook Ansible
      - name: Deploy application
        env:
          ANSIBLE_HOST_KEY_CHECKING: 'False'
        run: |
          ansible-playbook -i infrastructure/ansible/inventory.ini infrastructure/ansible/deploy.yml \
          --vault-password-file vault_pass.txt

      # Étape 8 : Nettoyage (suppression des fichiers sensibles)
      - name: Cleanup Vault password
        if: always()
        run: rm -f vault_pass.txt


      - name: Cleanup SSH key
        if: always()
        run: rm -f ~/.ssh/id_ed25519
        
