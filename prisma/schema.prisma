datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  password      String?   
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  addresses     Address[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model Category {
  id       String    @id @default(cuid())
  name     String    @unique
  products Product[]

  @@map("categories")
}

model Contact {
  id          String   @id @default(cuid())
  firstName   String   @map("first_name")
  lastName    String   @map("last_name")
  email       String
  subject     String
  message     String   @db.Text
  submittedAt DateTime @default(now()) @map("submitted_at")

  @@map("contacts")
}

model Product {
  id          String   @id @default(cuid())
  name        String   @unique
  slug        String   @unique
  description String   @db.Text
  image       String
  price       Decimal  @db.Decimal(10, 2)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  categoryId  String   @map("category_id")

  category Category @relation(fields: [categoryId], references: [id])

  @@map("products")
}

model Address {
  id                String  @id @default(cuid())
  name              String
  address           String
  additionalAddress String?
  zipCode           String
  city              String
  phoneNumber       String
  note              String?  @db.Text
  isPrincipal       Boolean
  isVisible         Boolean
  userId            String  @map("user_id")
  user              User    @relation(fields: [userId], references: [id])

  @@map("address")
}
